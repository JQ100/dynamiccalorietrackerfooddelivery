***SQL alchemy***


from sqlalchemy import create_engine, Column, Integer, String, Date, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()

class MenuItem(Base):
    __tablename__ = 'Menu_Item'
    id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String(64), nullable=False)
    price = Column(Integer, nullable=False)
    Calories = Column(Integer, nullable=False)
    Item_adding_date = Column(Date, nullable=False)
    Restaurant_id = Column(Integer, ForeignKey('Restaurant.id'))
    restaurant = relationship("Restaurant", back_populates="menu_items")

class Restaurant(Base):
    __tablename__ = 'Restaurant'
    id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String(64), nullable=False)
    Phone_number = Column(String(12), nullable=False)
    Email = Column(String(64), nullable=False)
    menu_items = relationship("MenuItem", order_by=MenuItem.id, back_populates="restaurant")
    orders = relationship("Order", back_populates="restaurant")

class Order(Base):
    __tablename__ = 'Order'
    order_id = Column(Integer, primary_key=True, autoincrement=True)
    date = Column(Date, nullable=False)
    restaurant_id = Column(Integer, ForeignKey('Restaurant.id'))
    restaurant = relationship("Restaurant", back_populates="orders")
    order_details = relationship("OrderDetails", back_populates="order")

class OrderDetails(Base):
    __tablename__ = 'Order_Details'
    order_details_id = Column(Integer, primary_key=True, autoincrement=True)
    order_id = Column(Integer, ForeignKey('Order.order_id'))
    menu_item_id = Column(Integer, ForeignKey('Menu_Item.id'))
    order = relationship("Order", back_populates="order_details")
    menu_item = relationship("MenuItem")

class CustomerOrders(Base):
    __tablename__ = 'customer_orders'
    id = Column(Integer, primary_key=True, autoincrement=True)
    restaurant_id = Column(Integer, ForeignKey('Restaurant.id'))
    menu_item_id = Column(Integer, ForeignKey('Menu_Item.id'))
    restaurant = relationship("Restaurant")
    menu_item = relationship("MenuItem")

# Create an engine that stores data in the local directory's
# sqlalchemy_example.db file.
engine = create_engine('sqlite:///sqlalchemy_example.db')

# Create all tables in the engine. This is equivalent to "Create Table"
# statements in raw SQL.
Base.metadata.create_all(engine)

